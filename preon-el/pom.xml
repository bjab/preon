<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.codehaus.preon</groupId>
        <artifactId>preon</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>preon-el</artifactId>
    <name>Limbo - Preon Expression Language</name>

    <description>
        An extremely simple expression language. The objective is to have
        an expression language that is expressive, while preserving the
        ability to turn the expression into something that can be read by
        non-programmers. In that sense, it is much more constrained than
        for instance the JSP EL.
    </description>

    <properties>
        <antlr.version>3.5.2</antlr.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
            <version>${antlr.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <excludePackageNames>org.codehaus.preon.el.ast</excludePackageNames>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>${antlr.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--
                    <debug>true</debug>
                    <libDirectory>src/main/antlr3/imports</libDirectory>
                    <messageFormat>antlr</messageFormat>
                    <outputDirectory>src/main/java/</outputDirectory>
                    <profile>false</profile>
                    <sourceDirectory>src/main/antlr3</sourceDirectory>
                    -->
                    <verbose>true</verbose>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>